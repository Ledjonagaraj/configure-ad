{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 # ----- Edit these Variables for your own Use Case ----- #\
$PASSWORD_FOR_USERS   = "Password1"\
$NUMBER_OF_ACCOUNTS_TO_CREATE = 1000\
# ------------------------------------------------------ #\
\
Function generate-random-name() \{\
    $consonants = @('b','c','d','f','g','h','j','k','l','m','n','p','q','r','s','t','v','w','x','z')\
    $vowels = @('a','e','i','o','u','y')\
    $nameLength = Get-Random -Minimum 3 -Maximum 7\
    $count = 0\
    $name = ""\
\
    while ($count -lt $nameLength) \{\
        if ($($count % 2) -eq 0) \{\
            $name += $consonants[$(Get-Random -Minimum 0 -Maximum $($consonants.Count - 1))]\
        \}\
        else \{\
            $name += $vowels[$(Get-Random -Minimum 0 -Maximum $($vowels.Count - 1))]\
        \}\
        $count++\
    \}\
\
    return $name\
\
\}\
\
$count = 1\
while ($count -lt $NUMBER_OF_ACCOUNTS_TO_CREATE) \{\
    $fisrtName = generate-random-name\
    $lastName = generate-random-name\
    $username = $fisrtName + '.' + $lastName\
    $password = ConvertTo-SecureString $PASSWORD_FOR_USERS -AsPlainText -Force\
\
    Write-Host "Creating user: $($username)" -BackgroundColor Black -ForegroundColor Cyan\
    \
    New-AdUser -AccountPassword $password `\
               -GivenName $firstName `\
               -Surname $lastName `\
               -DisplayName $username `\
               -Name $username `\
               -EmployeeID $username `\
               -PasswordNeverExpires $true `\
               -Path "ou=_EMPLOYEES,$(([ADSI]`"").distinguishedName)" `\
               -Enabled $true\
    $count++\
\}}